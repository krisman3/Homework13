##### Homework 13

### Task 1:

class Device:

    def __init__(self, name, model, power_consumption):
        self.name = name
        self.model = model
        self.power_consumption = power_consumption

    def turn_on(self):
        print(f"Device {self.name} : {self.model} is on and is consuming {self.power_consumption} units.")

    def turn_off(self):
        print(f"Device {self.name} : {self.model} is turned off.")



class CoffeeMachine(Device):

    def __init__(self, coffee_type, name, model, power_consumption):
        super().__init__(name, model, power_consumption)
        self.coffee_type = coffee_type  # Can be ground or beans

    def brew_coffee(self):
        print(f"Currently brewing {self.coffee_type}")


class Blender(Device):

    def __init__(self, blade_speed, name, model, power_consumption):
        super().__init__(name, model, power_consumption)
        self.blade_speed = blade_speed

    def blend(self):
        print(f"Currently blending with {self.blade_speed} rpm.")


class MeatGrinder(Device):

    def __init__(self, grind_size, name, model, power_consumption):
        super().__init__(name, model, power_consumption)
        self.grind_size = grind_size

    def grind_meat(self):
        print(f"Currently grinding meat to size {self.grind_size}.")


new_device = MeatGrinder("Size 4", "Stabby", 5000, "100W")
print(new_device.name)

#########################################

### Task 2:

class Passport:


    def __init__(self, holder_name, date_of_birth, pass_num, country_of_cit):
        self.__holder_name = holder_name
        self.__date_of_birth = date_of_birth
        self.__pass_num = pass_num
        self.__country_of_cit = country_of_cit

    def get_holder(self):
        return self.__holder_name

    def set_holder(self):
        self.__holder_name = input("Provide holder's name: ")

    def get_dob(self):
        return self.__date_of_birth

    def set_dob(self):
        self.__date_of_birth = input("Provide date of birth: ")

    def get_pass_num(self):
        return self.__pass_num

    def set_pass_num(self):
        self.__pass_num = input("Provide passport's number: ")

    def get_country(self):
        return self.__country_of_cit

    def set_country(self):
        self.__country_of_cit = input("Provide country of citizenship: ")

# Instead of creating a method which will print the passport's info, I am just overwriting the print() function
    def __str__(self):
        return (f"Name: {self.__holder_name} / DoB: {self.__date_of_birth} / Passport No: {self.__pass_num}"
                f"/ Country of citizenship: {self.__country_of_cit} ")

class ForeignPassport(Passport):

    def __init__(self, visas, foreign_pass_num, holder_name, date_of_birth, pass_num, country_of_cit):
        super().__init__(holder_name, date_of_birth, pass_num, country_of_cit)
        self.__visas = list(visas)
        self.__foreign_pass_num = foreign_pass_num

    def get_visas(self):
        return self.__visas

    def __str__(self):
        return super().__str__() + f"/ Current visas: {self.__visas} / Foreign passport No: {self.__foreign_pass_num}"

    def add_visa(self):
        self.__visas.append(input("From which country did you receive a visa: "))


new_passport = ForeignPassport(["Germany","Japan"], 1721381, "John Doe", "01/02/1999", "12464",
                               "Bulgaria")

print(new_passport)
